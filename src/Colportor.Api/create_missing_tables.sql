-- Script SQL para criar tabelas manualmente
-- Execute este script no banco de dados de produção

-- 1. Criar tabela MissionContacts
CREATE TABLE IF NOT EXISTS "MissionContacts" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RegionId" integer NOT NULL,
    "LeaderId" integer,
    "CreatedByUserId" integer NOT NULL,
    "CreatedByColportorId" integer,
    "FullName" text NOT NULL,
    "Gender" text,
    "BirthDate" timestamp with time zone,
    "MaritalStatus" text,
    "Nationality" text,
    "City" text,
    "State" text,
    "Phone" text,
    "Email" text,
    "Profession" text,
    "SpeaksOtherLanguages" boolean NOT NULL,
    "OtherLanguages" text,
    "FluencyLevel" text,
    "Church" text,
    "ConversionTime" text,
    "MissionsDedicationPlan" text,
    "HasPassport" boolean NOT NULL,
    "AvailableDate" timestamp with time zone,
    "Status" character varying(50) NOT NULL,
    "Notes" text,
    "LastContactedAt" timestamp with time zone,
    "NextFollowUpAt" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_MissionContacts" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_MissionContacts_Colportors_CreatedByColportorId" FOREIGN KEY ("CreatedByColportorId") REFERENCES "Colportors" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_MissionContacts_Regions_RegionId" FOREIGN KEY ("RegionId") REFERENCES "Regions" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_MissionContacts_Users_CreatedByUserId" FOREIGN KEY ("CreatedByUserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_MissionContacts_Users_LeaderId" FOREIGN KEY ("LeaderId") REFERENCES "Users" ("Id") ON DELETE SET NULL
);

-- Índices para MissionContacts
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_CreatedAt" ON "MissionContacts" ("CreatedAt");
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_CreatedByColportorId" ON "MissionContacts" ("CreatedByColportorId");
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_CreatedByUserId" ON "MissionContacts" ("CreatedByUserId");
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_LeaderId" ON "MissionContacts" ("LeaderId");
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_RegionId" ON "MissionContacts" ("RegionId");
CREATE INDEX IF NOT EXISTS "IX_MissionContacts_Status" ON "MissionContacts" ("Status");

-- 2. Criar tabela ContactObservations
CREATE TABLE IF NOT EXISTS "ContactObservations" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "MissionContactId" integer NOT NULL,
    "Type" character varying(50) NOT NULL,
    "Title" character varying(200) NOT NULL,
    "Content" text NOT NULL,
    "Author" character varying(100) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_ContactObservations" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ContactObservations_MissionContacts_MissionContactId" FOREIGN KEY ("MissionContactId") REFERENCES "MissionContacts" ("Id") ON DELETE CASCADE
);

-- Índices para ContactObservations
CREATE INDEX IF NOT EXISTS "IX_ContactObservations_MissionContactId" ON "ContactObservations" ("MissionContactId");
CREATE INDEX IF NOT EXISTS "IX_ContactObservations_CreatedAt" ON "ContactObservations" ("CreatedAt");

-- 3. Criar tabela ContactStatusHistories
CREATE TABLE IF NOT EXISTS "ContactStatusHistories" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "MissionContactId" integer NOT NULL,
    "FromStatus" character varying(50) NOT NULL,
    "ToStatus" character varying(50) NOT NULL,
    "ChangedBy" character varying(100),
    "ChangedAt" timestamp with time zone NOT NULL,
    "Notes" character varying(500),
    CONSTRAINT "PK_ContactStatusHistories" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ContactStatusHistories_MissionContacts_MissionContactId" FOREIGN KEY ("MissionContactId") REFERENCES "MissionContacts" ("Id") ON DELETE CASCADE
);

-- Índices para ContactStatusHistories
CREATE INDEX IF NOT EXISTS "IX_ContactStatusHistories_MissionContactId" ON "ContactStatusHistories" ("MissionContactId");
CREATE INDEX IF NOT EXISTS "IX_ContactStatusHistories_ChangedAt" ON "ContactStatusHistories" ("ChangedAt");

-- 4. Criar tabela WhatsAppConnections
CREATE TABLE IF NOT EXISTS "WhatsAppConnections" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PhoneNumber" character varying(20) NOT NULL,
    "Status" character varying(50) NOT NULL,
    "LastConnection" timestamp with time zone,
    "LastDisconnection" timestamp with time zone,
    "QrCode" character varying(500),
    "QrCodeGeneratedAt" timestamp with time zone,
    "QrCodeExpiresAt" timestamp with time zone,
    "ErrorMessage" character varying(1000),
    "SessionData" character varying(100),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "CreatedByUserId" integer NOT NULL,
    CONSTRAINT "PK_WhatsAppConnections" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_WhatsAppConnections_Users_CreatedByUserId" FOREIGN KEY ("CreatedByUserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

-- Índices para WhatsAppConnections
CREATE INDEX IF NOT EXISTS "IX_WhatsAppConnections_CreatedAt" ON "WhatsAppConnections" ("CreatedAt");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppConnections_CreatedByUserId" ON "WhatsAppConnections" ("CreatedByUserId");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppConnections_PhoneNumber" ON "WhatsAppConnections" ("PhoneNumber");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppConnections_Status" ON "WhatsAppConnections" ("Status");

-- 5. Criar tabela WhatsAppMessages
CREATE TABLE IF NOT EXISTS "WhatsAppMessages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "MissionContactId" integer NOT NULL,
    "Content" character varying(1000) NOT NULL,
    "Sender" character varying(50) NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Status" character varying(20) NOT NULL,
    "MediaUrl" character varying(500),
    "MediaType" character varying(50),
    "WhatsAppMessageId" character varying(100),
    "SentByUserId" integer,
    CONSTRAINT "PK_WhatsAppMessages" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_WhatsAppMessages_MissionContacts_MissionContactId" FOREIGN KEY ("MissionContactId") REFERENCES "MissionContacts" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_WhatsAppMessages_Users_SentByUserId" FOREIGN KEY ("SentByUserId") REFERENCES "Users" ("Id") ON DELETE SET NULL
);

-- Índices para WhatsAppMessages
CREATE INDEX IF NOT EXISTS "IX_WhatsAppMessages_MissionContactId" ON "WhatsAppMessages" ("MissionContactId");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppMessages_SentByUserId" ON "WhatsAppMessages" ("SentByUserId");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppMessages_Status" ON "WhatsAppMessages" ("Status");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppMessages_Timestamp" ON "WhatsAppMessages" ("Timestamp");

-- 6. Criar tabela WhatsAppTemplates
CREATE TABLE IF NOT EXISTS "WhatsAppTemplates" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "Content" character varying(1000) NOT NULL,
    "Category" character varying(50) NOT NULL,
    "IsActive" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "CreatedByUserId" integer NOT NULL,
    "AvailableVariables" character varying(500),
    CONSTRAINT "PK_WhatsAppTemplates" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_WhatsAppTemplates_Users_CreatedByUserId" FOREIGN KEY ("CreatedByUserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

-- Índices para WhatsAppTemplates
CREATE INDEX IF NOT EXISTS "IX_WhatsAppTemplates_Category" ON "WhatsAppTemplates" ("Category");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppTemplates_CreatedAt" ON "WhatsAppTemplates" ("CreatedAt");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppTemplates_CreatedByUserId" ON "WhatsAppTemplates" ("CreatedByUserId");
CREATE INDEX IF NOT EXISTS "IX_WhatsAppTemplates_IsActive" ON "WhatsAppTemplates" ("IsActive");

-- 7. Criar tabela Reminders
CREATE TABLE IF NOT EXISTS "Reminders" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ContactId" integer NOT NULL,
    "Title" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "DateTime" timestamp with time zone NOT NULL,
    "Priority" character varying(20) NOT NULL,
    "Completed" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "CompletedAt" timestamp with time zone,
    "CreatedBy" character varying(50),
    CONSTRAINT "PK_Reminders" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Reminders_MissionContacts_ContactId" FOREIGN KEY ("ContactId") REFERENCES "MissionContacts" ("Id") ON DELETE CASCADE
);

-- Índices para Reminders
CREATE INDEX IF NOT EXISTS "IX_Reminders_Completed" ON "Reminders" ("Completed");
CREATE INDEX IF NOT EXISTS "IX_Reminders_ContactId" ON "Reminders" ("ContactId");
CREATE INDEX IF NOT EXISTS "IX_Reminders_CreatedAt" ON "Reminders" ("CreatedAt");
CREATE INDEX IF NOT EXISTS "IX_Reminders_DateTime" ON "Reminders" ("DateTime");

-- 8. Marcar migrations como aplicadas no histórico
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES 
    ('20251020134639_AddMissionContacts', '8.0.8'),
    ('20251020150000_AddContactObservations', '8.0.8'),
    ('20251020175643_WhatsAppTablesCreated', '8.0.8'),
    ('20251024012704_AddRemindersTable', '8.0.8')
ON CONFLICT ("MigrationId") DO NOTHING;

-- Verificar se as tabelas foram criadas
SELECT table_name 
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN ('MissionContacts', 'ContactObservations', 'ContactStatusHistories', 
                   'WhatsAppConnections', 'WhatsAppMessages', 'WhatsAppTemplates', 'Reminders')
ORDER BY table_name;
