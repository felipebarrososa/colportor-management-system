// <auto-generated />
using System;
using Colportor.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Colportor.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Colportor.Api.Models.Colportor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastVisitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("CountryId");

                    b.HasIndex("LeaderId");

                    b.HasIndex("RegionId");

                    b.ToTable("Colportors");
                });

            modelBuilder.Entity("Colportor.Api.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Iso2")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Colportor.Api.Models.NotificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColportorId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationLogs");
                });

            modelBuilder.Entity("Colportor.Api.Models.PacEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColportorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("ColportorId", "StartDate", "EndDate");

                    b.ToTable("PacEnrollments");
                });

            modelBuilder.Entity("Colportor.Api.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColportorId")
                        .HasColumnType("integer");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColportorId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Colportor.Api.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryId1")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId1");

                    b.HasIndex("CountryId", "Name")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Colportor.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("ColportorId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColportorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Colportor.Api.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColportorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ColportorId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("Colportor.Api.Models.Colportor", b =>
                {
                    b.HasOne("Colportor.Api.Models.Country", null)
                        .WithMany("Colportors")
                        .HasForeignKey("CountryId");

                    b.HasOne("Colportor.Api.Models.User", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Colportor.Api.Models.Region", "Region")
                        .WithMany("Colportors")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Leader");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Colportor.Api.Models.PacEnrollment", b =>
                {
                    b.HasOne("Colportor.Api.Models.Colportor", "Colportor")
                        .WithMany("PacEnrollments")
                        .HasForeignKey("ColportorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colportor.Api.Models.User", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colportor");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("Colportor.Api.Models.Photo", b =>
                {
                    b.HasOne("Colportor.Api.Models.Colportor", "Colportor")
                        .WithMany()
                        .HasForeignKey("ColportorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Colportor");
                });

            modelBuilder.Entity("Colportor.Api.Models.Region", b =>
                {
                    b.HasOne("Colportor.Api.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colportor.Api.Models.Country", null)
                        .WithMany("Regions")
                        .HasForeignKey("CountryId1");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Colportor.Api.Models.User", b =>
                {
                    b.HasOne("Colportor.Api.Models.Colportor", "Colportor")
                        .WithMany()
                        .HasForeignKey("ColportorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Colportor.Api.Models.Region", "Region")
                        .WithMany("Leaders")
                        .HasForeignKey("RegionId");

                    b.Navigation("Colportor");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Colportor.Api.Models.Visit", b =>
                {
                    b.HasOne("Colportor.Api.Models.Colportor", "Colportor")
                        .WithMany("Visits")
                        .HasForeignKey("ColportorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colportor");
                });

            modelBuilder.Entity("Colportor.Api.Models.Colportor", b =>
                {
                    b.Navigation("PacEnrollments");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Colportor.Api.Models.Country", b =>
                {
                    b.Navigation("Colportors");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Colportor.Api.Models.Region", b =>
                {
                    b.Navigation("Colportors");

                    b.Navigation("Leaders");
                });
#pragma warning restore 612, 618
        }
    }
}
